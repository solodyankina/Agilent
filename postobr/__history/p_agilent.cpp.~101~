//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "p_agilent.h"
#include "drv_ag.cpp"
#include <fstream>
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma link "Chart"
#pragma link "Series"
#pragma link "TeEngine"
#pragma link "TeeProcs"
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------

void __fastcall TForm1::Button1Click(TObject *Sender)
{
	double dx,dy,X,Y, xreference, xorigin, xincrement, yreference, yorigin, yincrement;
	unsigned int size;
	bool bResult;
	double *mydata ;
	unsigned int *mylocal;
	unsigned int mylocal_cnt;
	unsigned int iLastPoint;
	char* filename;
	HANDLE binFile;
	unsigned long n;
	AnsiString str_date;
	AnsiString str_time;

	char* buf=new char[1000];
	int i,j;
	ofstream f;
	char* FileName_html;
	FileName_html = EditFileHtml->Text.t_str();

	int flen;
	AnsiString file_name = FileName_html;
	Label1->Visible=true;
	AnsiString imege_name = ExtractFileName(FileName_html);
	filename=EditFileName->Text.t_str();
	binFile = CreateFile(filename, GENERIC_READ, FILE_SHARE_READ, NULL,
		OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL, NULL);
	if (binFile == INVALID_HANDLE_VALUE)
		return;
	//MyCreateBin(filename,xreference,xorigin,xincrement,size,mydata) ;
	//создаем отчет из bin файла
	f.open(FileName_html);
	f << "<head>" << "\n" << "<meta http-equiv=Content-Type content=" <<
		"text/html; charset=windows-1251" << "></head>";
	// data
	bResult = ReadFile(binFile,&buf[0],10,&n,NULL) ;
	if ((bResult == FALSE) || (n == 0))
	{
	   ShowMessage("Невозможно считать дату из файла");
	   return;
	}
	buf[10]='\0';
	str_date = buf;
	// time;
	bResult = ReadFile(binFile,&buf[0],8,&n,NULL) ;
	if ((bResult == FALSE) || (n == 0))
	{
	   ShowMessage("Невозможно считать время из файла");
	   return;
	}
	buf[8]='\0';
	str_time = buf;
	f << "<p>" << str_date.c_str() <<" / "<< str_time.c_str() << "</p>";
	//считываем  параметры из bin айла
	// xreferense
	bResult = ReadFile(binFile,&xreference,sizeof(double),&n,NULL);
	if ((bResult == FALSE) || (n == 0))
	{
		ShowMessage("Невозможно считать xreference из файла");
			return;
	}
	// xorigin
	bResult = ReadFile(binFile,&xorigin,sizeof(double),&n,NULL);
	if ((bResult == FALSE) || (n == 0))
	{
		ShowMessage("Невозможно считать xorigin из файла");
			return;
	}
	// xincrement
	bResult = ReadFile(binFile,&xincrement,sizeof(double),&n,NULL);
	if ((bResult == FALSE) || (n == 0))
	{
		ShowMessage("Невозможно считать xincrement из файла");
			return;
	}

	// size
	bResult = ReadFile(binFile,&size,sizeof(unsigned int),&n,NULL);
	if ((bResult == FALSE) || (n == 0))
	{
		ShowMessage("Невозможно считать size из файла");
			return;
	}
	// mydata
	mydata = new double[size];
	bResult = ReadFile(binFile,&mydata[0],size*sizeof(double),&n,NULL);
	if ((bResult == FALSE) || (n == 0))
	{
		ShowMessage("Невозможно считать mydata из файла");
			return;
	}

	// используем считанные данные ---------------------------------------------
	mylocal = new unsigned int[size];
	double max =mydata[0];
	double min =mydata[0];
	//смотрим точеи графика
	mylocal_cnt=1;
	mydata[0] = 0;
	for (int i = 2; i < size-2; i++)
	{
		if ((mydata[i]-mydata[i-1])*(mydata[i+1]-mydata[i])<=0)
		{
			mylocal_cnt = mylocal_cnt+1;
			mylocal[mylocal_cnt - 1] = i;
		}
		if (max<mydata[i])
			max = mydata[i];
		if (min>mydata[i])
			min = mydata[i];
	}
	if (size>1)
	{
		mylocal[mylocal_cnt] = size-1;
		mylocal_cnt++;
		if (max<mydata[size-1])
			max = mydata[size-1];
		if (min>mydata[size-1])
		min = mydata[size-1];
	 }

	Graphics::TBitmap *MyBitmap = new Graphics::TBitmap(); // для создания картинки
	max = max + 0.05*(max - min);
	min = min - 0.05*(max - min);
	str = ExtractFileDir(file_name) + "\\" + "im" + ".bmp";
	MyCreateBitMap(MyBitmap,str, mydata, size,max,min);
	f<<"<p align=center><img src="<< str.c_str()<<"></p>"<<"\n"<<"</body></html>";
    MyBitmap->Free();
	f.close();
}
//---------------------------------------------------------------------------

void __fastcall TForm1::SpeedButton1Click(TObject *Sender)
{
	OpenDialog1->Filter = "*.bin;*.b8;*.b16;*.b24;*.b32|*.bin;*.b8;*.b16;*.b24;*.b32";
	OpenDialog1->Execute();
	EditFileName->Text = OpenDialog1->FileName;
}
//---------------------------------------------------------------------------
void __fastcall TForm1::SpeedButton2Click(TObject *Sender)
{
	OpenDialog2->Execute();
	EditFileHtml->Text = OpenDialog2->FileName;
}
//---------------------------------------------------------------------------

